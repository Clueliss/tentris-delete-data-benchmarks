- name: Check for the tentris source
  stat:
    path: "~/tentris_code_{{ tentris_version }}"
  register: tentris_code_dir

- name: copy tentris source
  when: not tentris_code_dir.stat.exists
  copy:
    src: /home/liss/Netzwerk/lpf-sabertooth/home/dev/tentris-private/
    dest: "~/tentris_code_{{ tentris_version }}"

- name: copy script
  copy:
    src: build_tentris.sh
    dest: '~'

- name: Build Tentris binaries
  shell: 'bash build_tentris.sh {{ tentris_version }}'
  args:
    chdir: '~'
  register: debug_tentris

- debug: msg="{{ debug_tentris.stdout_lines }}"

- debug: msg="{{ debug_tentris.stderr_lines }}"

- name: Create installation directory
  file:
    path: "{{ target_dir }}/triplestores/tentris/{{ tentris_version }}"
    state: directory

- name: Install tentris_server
  copy:
    remote_src: yes
    src: "~/tentris_{{ tentris_version }}/tentris_server"
    dest: "{{ target_dir }}/triplestores/tentris/{{ tentris_version }}/tentris_server"
    mode: 0755

- name: Install tentris_loader
  copy:
    remote_src: yes
    src: "~/tentris_{{ tentris_version }}/tentris_loader"
    dest: "{{ target_dir }}/triplestores/tentris/{{ tentris_version }}/tentris_loader"
    mode: 0755

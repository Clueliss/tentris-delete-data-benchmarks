connection0.name = {{ item[0].name }}
connection0.service = {{ item[0].connection_url }}
connection0.update.service = {{ item[0].connection_url }}
connection0.user = 
connection0.password = 
iguana.cc.connections = connection0

dataset0.name = {{ item[1].name }}
iguana.cc.datasets = dataset0

{% for count in iguana_http_connections %}
task{{ loop.index0 }}.class = org.aksw.iguana.tp.tasks.impl.stresstest.Stresstest
sparql{{ count }} = {{ count }},org.aksw.iguana.tp.tasks.impl.stresstest.worker.impl.SPARQLWorker,{{ iguana_query_timeout }},{{ item[1].queries_path }},0,0
task{{ loop.index0 }}x.timeLimit = {{ iguana_time_limit }}
task{{ loop.index0 }}x.queryHandler = org.aksw.iguana.tp.query.impl.InstancesQueryHandler
task{{ loop.index0 }}x.workers = sparql{{ count }}
task{{ loop.index0 }}x.warmupTime = 0
task{{ loop.index0 }}x.warmupQueries = {{ item[1].queries_path }}
task{{ loop.index0 }}.constructorArgs = task{{ loop.index0 }}x.timeLimit,task{{ loop.index0 }}x.queryHandler,task{{ loop.index0 }}x.workers,task{{ loop.index0 }}x.warmupTime,task{{ loop.index0 }}x.warmupQueries,task{{ loop.index0 }}x.warmupUpdates

{% endfor %}

iguana.cc.tasks = {% for count in iguana_http_connections %}{% if not loop.first %},{% endif %}task{{ loop.index0 }}{% endfor %}

script.hook.pre=/opt/loaders/{{ item[0].name }}-start-{{ item[1].name }}.sh
script.hook.post=/opt/loaders/{{ item[0].name }}-stop-{{ item[1].name }}.sh
